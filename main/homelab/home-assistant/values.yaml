app-template:
  image:
    repository: ghcr.io/home-assistant/home-assistant
    tag: 2025.7.1
  env:
    TZ: "Europe/Berlin"
  envFrom:
    - secretRef:
        name: home-assistant-secrets
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet

  # securityContext:
  #   privileged: true

  service:
    main:
      type: LoadBalancer
      loadBalancerIP: 10.18.20.41
      ports:
        http:
          port: 8123
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Home
        gethomepage.dev/icon: home-assistant
        gethomepage.dev/name: Home Assistant
      hosts:
        - host: "hass.home.ibartels.de"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - "hass.home.ibartels.de"
          secretName: "home-ibartels-de-tls"

  prometheus:
    serviceMonitor:
      enabled: false
  probes:
    liveness:
      enabled: false
    readiness:
      enabled: false
    startup:
      enabled: true
  persistence:
    config:
      enabled: true
      existingClaim: home-assistant-pvc
  addons:
    codeserver:
      enabled: true
      image:
        repository: codercom/code-server
        tag: 4.101.2
      workingDir: "/config"
      args:
        - --user-data-dir
        - "/config/.vscode"
        - --auth
        - "none"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Tools
          gethomepage.dev/icon: code-server
          gethomepage.dev/name: Home Assistant
          gethomepage.dev/pod-selector: "app.kubernetes.io/name=home-assistant"
        hosts:
          - host: hass-config.home.ibartels.de
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - hass-config.home.ibartels.de
            secretName: "home-ibartels-de-tls"
      volumeMounts:
        - name: config
          mountPath: /config